services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    env_file:
      - ./.env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aleator -d aleator"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env.prod
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    
  # Frontend (for production builds)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env.prod
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data: